@model DoinikSokal.ViewModels.EmployeeViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit","Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div style="margin-left: 15px;">
            <div>
                <label>Upload Image</label>
                <div id="imgPreview" class="thumbnail" style="display: block">
                    <img src="@Url.Content("~/EmployeeImage/"+Model.FilePath)" class="img-responsive" id="targetImg" style="height: 150px; width: 150px;" />
                    @Html.HiddenFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="caption">
                        <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                        <span id="description"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="btn btn-primary ">
                <div class="col-md-10">
                    <input type="file" name="Image" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" />
                </div>
            </div>
        </div>



        @*<div class="form-group">
            @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="imgPreview" class="thumbnail" style="display: block">
                <div class="col-md-10">
                    <img src="@Url.Content("~/EmployeeImage/" + Model.FilePath)" class="img-responsive" id="targetImg" style="height: 250px; width: 250px" />
                    <div class="caption">
                        <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                        <span id="description"></span>
                    </div>
                     @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="btn btn-primary ">
            <div class="col-md-10">
                <input type="file" name="Image" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" />
            </div>
        </div>*@



        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Male : @Html.RadioButtonFor(model => model.Gender, "Male")
                Female : @Html.RadioButtonFor(model => model.Gender, "Female")
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts{

    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            $("#fileUpload").change(function () {
                debugger;
                var file = this.files;

                if (file && file[0]) {
                    ReadImage(file[0]);
                }
            });
        });
        var ReadImage = function (file) {
            debugger;
            var reader = new FileReader;
            var image = new Image;

            reader.readAsDataURL(file);
            reader.onload = function (_file) {
                image.src = _file.target.result;
                image.onload = function () {
                    var height = this.height;
                    var width = this.width;
                    var type = file.type;
                    var size = ~~(file.size / 1024) + "KB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                    $("#imgPreview").show();
                };
            };
        };
        var ClearPreview = function () {
            debugger;
            $("#fileUpload").val('');
            $("#description").text('');
            $("#imgPreview").hide();
        };
    </script>
}